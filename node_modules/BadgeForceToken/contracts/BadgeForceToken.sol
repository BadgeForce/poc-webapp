pragma solidity ^0.4.18;

import 'zeppelin-solidity/contracts/token/StandardToken.sol';
import 'zeppelin-solidity/contracts/token/DetailedERC20.sol';
import 'zeppelin-solidity/contracts/token/BurnableToken.sol';
import 'zeppelin-solidity/contracts/math/SafeMath.sol';

contract BadgeForceToken is StandardToken, DetailedERC20, BurnableToken {
    
    uint256 constant public INITIAL_SUPPLY = 1*(10**9)*(10**18);

    /// @notice credential issue burn rate
    uint256 public issueBurnRate;

    function BadgeForceToken() DetailedERC20("BadgeForceToken", "BFT", 18) {
        balances[msg.sender] = INITIAL_SUPPLY; 
        totalSupply = INITIAL_SUPPLY;
        issueBurnRate = 100000;   
    }

    function burnForIssue() public returns (bool success) {
        burn(SafeMath.div(1, issueBurnRate));
        return true;
    }
}