import { Contract, ContractConfig } from '../contract';
import { IssuerClient, Issuer } from '../issuer';
export declare const parseIssuerrAddrRes: (issuerAddrRes: any) => any;
export declare class IssuerFactory {
    factory: any;
    badeForceTokenAddr: number;
    issuerClient: IssuerClient;
    constructor(factory: any, badeForceTokenAddr: number, issuerClient: IssuerClient);
    newIssuer(admin: any, name: any, url: any): Promise<Issuer>;
}
export declare class IssuerFactoryClient extends Contract {
    badeForceTokenAddr: number;
    issuerClient: IssuerClient;
    constructor(config: ContractConfig, badeForceTokenAddr: number, issuerClient: IssuerClient);
    getInstance(address: number): Promise<IssuerFactory>;
}
