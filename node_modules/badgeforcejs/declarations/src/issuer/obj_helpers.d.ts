export declare class IssuerInfo {
    issuer: string;
    contract: string;
    name: string;
    url: string;
    /**
     * Issuer info helper object
     * @param issuer   address of the issuer god account (wallet address)
     * @param contract address of the issuer contract
     * @param name      name of the issuer
     * @param url      link to issuer site or page
     */
    constructor(issuer?: string, contract?: string, name?: string, url?: string);
}
export declare class IssuerBadge {
    address: string;
    description: string;
    name: string;
    image: string;
    version: string;
    /**
     * Issuer badge helper object
     * @param address     address of the issuer contract
     * @param description
     * @param name
     * @param image
     * @param version
     */
    constructor(address?: string, description?: string, name?: string, image?: string, version?: string);
}
export declare class Credential {
    badgeName: string;
    recipient: string;
    expires: number;
    /**
     * Credential helper object. Used to mitigate errors when ussing [[issueCredential]] function
     * @param badgeName name of the badge that will be used for issuance
     * @param recipient address of the holder contract
     * @param expires   optional expiration date (pass 0 for never)
     */
    constructor(badgeName?: string, recipient?: string, expires?: number);
}
export declare class VerifyResponse {
    verified: string;
    message: string;
    /**
     * Verification response helper object
     * @param verified true/false
     * @param message  success or error message
     */
    constructor(verified?: string, message?: string);
}
