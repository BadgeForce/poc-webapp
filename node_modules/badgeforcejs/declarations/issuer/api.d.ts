import { Contract, ContractConfig } from '../contract';
import { IssuerInfo, IssuerBadge, Credential, VerifyResponse } from './obj_helpers';
export declare class Issuer {
    issuer: any;
    constructor(issuer: any);
    getIssuerInfo(): Promise<IssuerInfo>;
    getBadge(i: any): Promise<IssuerBadge>;
    getBadges(): Promise<IssuerBadge[]>;
    createBadge(badge: IssuerBadge): Promise<any>;
    deleteBadge(name: string): Promise<any>;
    issueCredential(credential: Credential): Promise<any>;
    getNumberOfBadges(): Promise<any>;
    authorzeAccount(newIssuer: any): Promise<any>;
    removeAuthorizedAccount(issuer: any): Promise<any>;
    getAuthorizedAccount(index: any): Promise<any>;
    getNumberOfAuthorizedAccounts(): Promise<any>;
    revoke(txnKey: any): Promise<any>;
    unRevoke(txnKey: any): Promise<any>;
    isRevoked(txnKey: any): Promise<any>;
    verifyCredential(txnKey: any, recipient: any): Promise<VerifyResponse>;
}
export declare class IssuerClient extends Contract {
    constructor(config: ContractConfig);
    getInstance(address: number): Promise<Issuer>;
}
