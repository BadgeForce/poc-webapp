import {HolderFactoryClient, HolderFactory, IssuerFactoryClient, IssuerFactory} from "../index";
import {HolderClient, Holder} from "../../holder";
import {IssuerClient, Issuer} from "../../issuer";
import {ContractConfig} from "../../contract";
import {getTestAccounts, getTestInstances, web3, ganacheHost} from "../../../test-utils";
const issuerFactory = require("factories").issuerFactory;
const holderFactory = require("factories").holderFactory;
const holderArtifacts = require("badgeforce").holder;
const issuerArtifacts = require("badgeforce").issuer;

describe("Holder Factory api", () => {
	let holderF: HolderFactory;
	let issuerF: IssuerFactory;
	let accounts;
	let testContractInstances;
	let issuerParams;
	let holderClient: HolderClient;
	let issuerClient: IssuerClient;
	let newIssuerParams;
	const tokenArtifacts = require("BadgeForceToken").badgeforcetoken;
	beforeAll(async () => {
			accounts = getTestAccounts();
	});
	beforeEach(async () => {
			issuerParams = {adminWalletAddr: accounts[0], name: "BadgeForce", url: "https://github.com/BadgeForce"};
			testContractInstances = await getTestInstances(issuerParams);

			const holderConfig = new ContractConfig(ganacheHost, holderArtifacts, 0, 7500000);
      const issuerConfig = new ContractConfig(ganacheHost, issuerArtifacts, 0, 4966224);
      holderClient = new HolderClient(holderConfig);
      issuerClient = new IssuerClient(issuerConfig);

			const holderFactoryConfig = new ContractConfig(ganacheHost, holderFactory, 0, 7500000);
			const issuerFactoryConfig = new ContractConfig(ganacheHost, issuerFactory, 0, 7500000);
			const holderFactoryClient = new HolderFactoryClient(holderFactoryConfig, holderClient);
			const issuerFactoryClient = new IssuerFactoryClient(issuerFactoryConfig, testContractInstances.token.address, issuerClient);

			holderF = await holderFactoryClient.getInstance(testContractInstances.holderF.address);
			issuerF = await issuerFactoryClient.getInstance(testContractInstances.issuerF.address);

			newIssuerParams = {
				admin: accounts[0],
				name: "BadgeForce",
				url: "https://github.com/BadgeForce"
			}
	})
	it("should create new holder contract", async () => {
		const holder: Holder = await holderF.newHolder(accounts[0]);
		const info = await holder.getHolderInfo();
		expect(info.address).toBe(accounts[0]);
	});
	it("should create new issuer contract", async () => {
		const issuer: Issuer = await issuerF.newIssuer(issuerParams.adminWalletAddr, issuerParams.name, issuerParams.url);
		const info = await issuer.getIssuerInfo();
		expect(info.issuer).toBe(newIssuerParams.admin);
		expect(info.name).toBe(newIssuerParams.name);
		expect(info.url).toBe(newIssuerParams.url);
	});
});
