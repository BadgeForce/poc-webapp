pragma solidity ^0.4.17;

library BadgeLibrary {

    /// @notice represents simple details about a earnable badge
    struct Badge {
        address issuer;
        string description;
        string name;
        string image;
        string version; 
    }    

    /// @notice represents details of an issued badge 
    struct Credential {
        Badge badge;
        uint expires;
        address recipient;
        bytes32 txnKey;
        bool active;
    }
    
    /// @notice compute hash of badgename 
    function getBadgeNameHash(string _badgename) pure public returns (bytes32 _hash) {
        return keccak256(_badgename);
    }

    /// @notice compute hash for badge linking
    function getBadgeLinkHash(string _name, address _issuer) pure public returns (bytes32 hash) {
        return keccak256(_name, _issuer);
    }

    /// @notice compute integrity hash of credential data
    function getIntegrityHash(
        address issuer, 
        string description, 
        string name, 
        string image, 
        string version,
        address recipient
    ) pure public returns(bytes32 _hash) 
    {
        return keccak256(
                issuer, 
                description, 
                name, 
                image, 
                version, 
                recipient
        );
    }
}