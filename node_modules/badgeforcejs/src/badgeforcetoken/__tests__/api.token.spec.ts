import {BadgeForceToken, BadgeForceTokenClient} from "../index";
import {ContractConfig} from "../../contract";
import {getTestAccounts, getTestInstances, web3, ganacheHost} from "../../../test-utils";

describe("BadgeForceToken api", () => {
  let issuerParams;
  let testContractInstances;
	let accounts;
	let badgeForceToken: BadgeForceToken;
  const tokenArtifacts = require("BadgeForceToken").badgeforcetoken;
	beforeAll(async () => {
			accounts = getTestAccounts();
	});
	beforeEach(async () => {
				issuerParams = {adminWalletAddr: accounts[0], name: "BadgeForce", url: "https://github.com/BadgeForce"};
				testContractInstances = await getTestInstances(issuerParams);
				const tokenConfig = new ContractConfig(ganacheHost, tokenArtifacts, 0, 7500000);
				const tokenClient = new BadgeForceTokenClient(tokenConfig);
				badgeForceToken = await tokenClient.getInstance(testContractInstances.token.address);
	});
	it("should get balance of an account", async () => {
		const address = "0x0";
		const balance = await badgeForceToken.getBalanceOf(address);
		expect(balance).toEqual(web3.toBigNumber(0));
	});
});
